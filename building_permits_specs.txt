PERMITS
The permits.py script should rely on a Python package supported by a setup.py script
  and available on GitHub.com. Thus, installation for anyone ever will consist of:
  1. download/clone the package from github
  2. unzipping the contents
  3. run `python setup.py install` at the commandline in that directory

Once installed the following arguments will be accessable using the command line.

Commandline Arguments:
All commandline arguments assume the database already exists and will modify it,
  except the --reset option which backs-up and recreates the database from scratch.
This is because the database should be maintained rather than recreated every year.

"the model" includes the downloading, processing, and spatialization processes. It is
run with every "appended" year or with each year in a range. We should never need
options for separately downloading, processing, or spatializing data by year.


Most frequently used arguments:
-------------------------------

permits.py <year>
    Run the model for city permit data for the calendar year of <year>

permits.py <year> --county
    Process (county method) and spatialize previously received County data for <year>
    - filename of county data must contain the year

permits.py --update
    Drops the processing geometries and reloads them with the expectation that
      they've been updated.

permits.py --report
    Creates the reports


Other arguments:
----------------

permits.py --reset
    Runs the full permits model from 2013 data to most recent permit year
    - Ask the user "Are you sure? y/n"
    - Tell user "We've backed-up the old database to /archive/"

permits.py --from 2013 --to 2015
    Run the model for a specified range of years
    Maybe useless?

permits.py --from 2015 --date 02/15/2015
    Run the model for using a specific end date
    Might be useful for reporting part-way through the year.


permits.py --add-geometry <feature>
permits.py --rm-geometry <table>


2018 Scenario:
Email the county for their data and place properly-named excel file(s) to county/raw/
run `permits.py --update` to update the required geometries (spatial data)
run `permits.py --append 2018
run `permits.py --report` to output reports

